package com.by.basic;

import org.junit.Test;

/**
 * 运算符：进行特定操作的符号
 * 表达式：用运算符连起来的式子叫做表达式
 *
 * 四则运算：加减乘除 + - * /
 *      除法：如果两个整数相除，结果是整数部分，是一个整数，没有小数
 *      注意：一旦类型中有不同类型的数据，那么结果将会是数据类型范围大的那种
 *      加号：
 *          1. 对于数值来说，就是加法
 *          2. 对于char类型，在计算之前，char会被提升为int，然后再计算
 *          3. 对于String字符串类型，代表字符串的连接操作
 *              * 任何数据和字符串进行 +连接的时候，都会转换为字符串
 * 取余运算：%
 * 赋值运算符： =
 *      基本赋值运算符：=，代表将右侧的数据交给左侧的变量
 *      复合赋值运算符：与其他运算符结合，类似 += ，a += b 相当于 a = a + b
 *             * 只有变量才能进行复合赋值，常量不能进行赋值
 *             * 复合赋值运算符其中隐含了一个强制类型转换
 * 自增与自减运算符：++、--
 *      写在变量名之前：先进行自增或自减操作，再参与表达式运算
 *      写在变量名之后：先参与属于自己的表达式计算，然后再进行自增自减操作
 *      在单独使用的时候，两者结果没有区别
 * 比较运算符：
 *      > >= < <= == !=
 * 逻辑运算符：
 * 三元运算符：
 * 位运算符：
 *
 */
public class Operator {
    @Test
    public void testAMMD() {
        int a = 13;
        int b = 4;
        // 加、减、乘、除、取余
        System.out.println("a + b = " + (a+b));
        System.out.println("a - b = " + (a-b));
        System.out.println("a * b = " + (a*b));
        System.out.println("a / b = " + (a/b));
        System.out.println("a % b = " + (a%b));
    }


}
